\documentclass[a4paper,11pt]{article}

\usepackage{amsmath}
\usepackage{times}
\usepackage{hyperref}
\usepackage[numbers, round]{natbib}
\usepackage[american]{babel}
\usepackage{authblk}
\usepackage{subfig}
\usepackage{placeins}
\usepackage{footnote}
\usepackage{tabularx}
\usepackage{parskip}
\usepackage{threeparttable}
\renewcommand\Affilfont{\itshape\small}

\usepackage{csquotes}
\usepackage{setspace}

\doublespacing

\renewcommand{\topfraction}{0.85}
\renewcommand{\textfraction}{0.1}
\usepackage{graphicx}
\usepackage{gensymb}

\usepackage{mathptmx}% Times Roman font
\usepackage[scaled=.90]{helvet}% Helvetica, served as a model for arial

\usepackage{indentfirst}
\setlength{\parskip}{0pt}

\usepackage{courier}
\usepackage{fullpage}
\usepackage{pdflscape}
\usepackage{tabularx}
\usepackage{titlesec}
\usepackage{titletoc}

\titleformat{\section}
  {\normalfont\sffamily\bfseries\LARGE}
  {\thesection}{0.5em}{}
\titleformat{\subsection}
  {\normalfont\sffamily\bfseries\Large}
  {\thesubsection}{0.5em}{}
\titleformat{\subsubsection}
  {\normalfont\sffamily\large}
  {\thesubsubsection}{0.5em}{}
  
\titlecontents{section}
[2em]                 % adjust left margin
{\sffamily}             % font formatting
{\contentslabel{2.3em}} % section label and offset
{\hspace*{-2.3em}}
{\titlerule*[0.25pc]{.}\contentspage}
  
\titlecontents{subsection}
[4.6em]                 % adjust left margin
{\sffamily}             % font formatting
{\contentslabel{2.3em}} % section label and offset
{\hspace*{-2.3em}}
{\titlerule*[0.25pc]{.}\contentspage}
  
\titlecontents{subsubsection}
[6.9em]                 % adjust left margin
{\sffamily}             % font formatting
{\contentslabel{2.3em}} % section label and offset
{\hspace*{-2.3em}}
{\titlerule*[0.25pc]{.}\contentspage}

\titlecontents{table}
[0em]                 % adjust left margin
{\sffamily}             % font formatting
{\textbf{Table}\hspace*{2em} \contentslabel {2em}} % section label and offset
{\hspace*{4em}}
{\titlerule*[0.25pc]{.}\contentspage}

\titlecontents{figure}
[0em]                 % adjust left margin
{\sffamily}             % font formatting
{\textbf{Figure}\hspace*{2em} \contentslabel {2em}} % section label and offset
{\hspace*{4em}}
{\titlerule*[0.25pc]{.}\contentspage}

%Italisize and change font of urls:
\urlstyle{sf}
\renewcommand\UrlFont\itshape

\usepackage{caption}
\captionsetup{
  font={sf},
  labelfont={bf,sf},
  labelsep=period,
  justification=justified,
  singlelinecheck=false
}

\setlength\parindent{20pt}

\textwidth=6.5in
\textheight=9.2in
\parskip=.3cm
\oddsidemargin=.1in
\evensidemargin=.1in
\headheight=-.3in

%------------------------------------------------------------
% newcommand
%------------------------------------------------------------
\newcommand{\scscst}{\scriptscriptstyle}
\newcommand{\scst}{\scriptstyle}
\newcommand{\Robject}[1]{{\texttt{#1}}}
\newcommand{\Rfunction}[1]{{\texttt{#1}}}
\newcommand{\Rclass}[1]{\textit{#1}}
\newcommand{\Rpackage}[1]{\textit{#1}}
\newcommand{\Rexpression}[1]{\texttt{#1}}
\newcommand{\Rmethod}[1]{{\texttt{#1}}}
\newcommand{\Rfunarg}[1]{{\texttt{#1}}}

\begin{document}

\renewenvironment{knitrout}{\begin{singlespace}}{\end{singlespace}}
\renewcommand*\listfigurename{Figures}
\renewcommand*\listtablename{Tables}

<<openLibrary, echo=FALSE, message=FALSE>>=
library(xtable)
options(continue=" ")
options(width=60)
library(knitr)
library(reshape2)
library(USGSwsQW)
library(EGRET)
library(smwrGraphs)
library(USGSHydroTools)
@


<<include=TRUE ,echo=FALSE,eval=TRUE>>=
opts_chunk$set(highlight=TRUE, tidy=TRUE, keep.space=TRUE, keep.blank.space=FALSE, keep.comment=TRUE, concordance=TRUE,tidy=FALSE,comment="")

knit_hooks$set(inline = function(x) {
  if (is.numeric(x)) return(round(x, 3))#knitr:::format_sci(x, 'latex'))
  if (is.character(x)) return(x)
#   knitr:::hi_latex(x) 
})

knit_hooks$set(crop = hook_pdfcrop)

bold.colHeaders <- function(x) {
  x <- gsub("\\^(\\d)","$\\^\\1$",x)
  x <- gsub("\\%","\\\\%",x)
  x <- gsub("\\_"," ",x)
  returnX <- paste0("\\multicolumn{1}{c}{\\textbf{\\textsf{", x, "}}}")
}

addSpace <- function(x) ifelse(x != "1", "[5pt]","")

@

%------------------------------------------------------------
\title{Lake Data}
%------------------------------------------------------------
\author[1]{S. Bridgett Manteufel}
\affil[1]{United States Geological Survey}

% \maketitle

\noindent{\huge\textsf{\textbf{Lake Data}}}

\noindent\textsf{By S. Bridgett Manteufel}

\newpage 

\tableofcontents
\listoffigures
\listoftables

\newpage

<<getAllData, echo=FALSE, eval=TRUE, message=FALSE>>=
load(file="qwDataWQP.RData")
load(file="siteTable.RData")
load(file="stageData.RData")
load(file="sites.RData")
load(file="pcodes.RData")
load(file="sitesStage.RData")
load(file="pCodeInfo.RData")
@

%------------------------------------------------------------
\section{Introduction}
%------------------------------------------------------------ 

<<WImap, echo=FALSE, eval=TRUE, results='asis',fig.cap="Location of USGS lake water-quality, lake-stage, and lake-level network stations in Wisconsin">>=
#Map boundaries:
xmin <- -93
xmax <- -86.6
ymin <- 42
ymax <- 47.1
#Legend placement:
xleft <- -92.8
ytop <- 42.8

siteTable <- read.csv("siteTable.csv", stringsAsFactors=FALSE)

MapSizeColor(siteTable, colorVar="type",sizeVar=NA,
             latVar = "dec_lat_va", lonVar = "dec_long_va",
             xmin=xmin, xmax=xmax,
             ymin=ymin, ymax=ymax,
             xleft=xleft,ytop=ytop,
             colVector=c("red","blue"),
             includeLabels=FALSE, #Change this to TRUE, then start futzing with offset stuff
             colText=expression(bold("EXPLANATION")),
             LegCex=0.6
#              .offsetLat="offsetLat",offsetLon="offsetLon",
#              offsetLineLat="offsetLineLat",offsetLineLon="offsetLineLon",
#              labels="map_nm"
             )

@

\clearpage

%------------------------------------------------------------
\section{Lake Data}
%------------------------------------------------------------ 


%------------------------------------------------------------
\subsection{\Sexpr{sitesStage[1]} \Sexpr{siteTable[siteTable$site_no == sitesStage[1],"station_nm"]}}
%------------------------------------------------------------ 
<<getSite1DataStage, echo=FALSE, eval=TRUE>>=
siteINFO <- siteTable[siteTable$site_no == sitesStage[1],]
lat <- siteINFO$lat_va
lon <- siteINFO$long_va
latHR <- substr(lat, 1, 2)
latMN <- substr(lat, 3, 4)
latSC <- substr(lat, 5,6)
DA <- siteINFO$drain_area_va
@

LOCATION - Lat \Sexpr{latHR}\degree\Sexpr{latMN}\texttt{'}\Sexpr{latSC}\texttt{"}
DRAINAGE AREA - \Sexpr{DA}mi$^2$

<<stageTable, echo=FALSE,results='asis'>>=
months <- c("Day","Oct","Nov","Dec","Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep")
# names(months) <- c("13", "10","11","12","01","02","03","04","05","06","07","08","09")
day <- 1:31

stage <- stageData[stageData$site_no == sitesStage[1],
                   c(which(names(stageData) == "Date"),
                     which(sapply(stageData, class) == "numeric"))]
stageValues <- stage[,sapply(stage, function(x) !all(is.na(x)))]
stageValues$Day <- as.numeric(sapply(strsplit(as.character(stageValues$Date), "-"), function(x) x[3]))
stageValues$Month <- as.numeric(sapply(strsplit(as.character(stageValues$Date), "-"), function(x) x[2]))

data.df <- data.frame(Day=day, stringsAsFactors=FALSE)
for(i in c(10:12,1:9)){
  stageThisMonth <- stageValues[stageValues$Month == i,2]
  if(length(stageThisMonth) != 31){
    numNA <- 31-length(stageThisMonth)
    stageThisMonth <- c(stageThisMonth, rep(NA, numNA))
  }
  data.df <- cbind(data.df, stageThisMonth)
}
names(data.df) <- months

print(xtable(data.df,
       label="tab:stage1",
       caption="Stage data"),
       caption.placement="top",
       size = "\\footnotesize",
       latex.environment=NULL,
       sanitize.text.function = function(x) {x},
       sanitize.colnames.function =  bold.colHeaders,
       sanitize.rownames.function = addSpace
      )

@

\clearpage

\begin{landscape}
%------------------------------------------------------------
\subsection{\Sexpr{sites[1]} \Sexpr{siteTable[siteTable$site_no == sites[1],"station_nm"]}}
%------------------------------------------------------------ 
<<getSiteQW1Data, echo=FALSE, eval=TRUE>>=
siteINFO <- siteTable[siteTable$site_no == sites[1],]
lat <- siteINFO$lat_va
lon <- siteINFO$long_va
latHR <- substr(lat, 1, 2)
latMN <- substr(lat, 3, 4)
latSC <- substr(lat, 5,6)
DA <- siteINFO$drain_area_va
@



LOCATION - Lat \Sexpr{latHR}\degree\Sexpr{latMN}\texttt{'}\Sexpr{latSC}\texttt{"}

DRAINAGE AREA - \Sexpr{DA}mi$^2$


<<qwTable, echo=FALSE,results='asis'>>=

subData <- qwDataWQP[qwDataWQP$MonitoringLocationIdentifier == paste0("USGS-",sites[1]),]

qwDataSite <- processQWData(subData)

qwDataSite <- sapply(qwDataSite, as.character)
qwDataSite[is.na(qwDataSite)] <- "--"

uniquePcodes <- unique(sapply(strsplit(colnames(qwDataSite),"\\."),function(x) x[2]))
uniquePcodes <- uniquePcodes[!is.na(uniquePcodes)]

wideQW <- data.frame(date=qwDataSite[,1],stringsAsFactors=FALSE)
namesVector <- "Date"
for(i in uniquePcodes){
  newCol <- apply(qwDataSite[,grep(i,colnames(qwDataSite))], 1, paste, collapse="")
  wideQW <- cbind(wideQW, newCol)
  namesVector <- cbind(namesVector, 
                       paste(pCodeInfo$srsname[pCodeInfo$parameter_cd == i],
                              pCodeInfo$parameter_units[pCodeInfo$parameter_cd == i],
                              i))
}

names(wideQW) <- namesVector

firstTable <- xtable(wideQW[,1:9],
       label="tab:QW1",
       caption="Water-quality data"
       )
align(firstTable) <- "lXXXXXXXXX"
print(firstTable,
       caption.placement="top",
       size = "\\footnotesize",
       latex.environment=NULL,
       tabular.environment="tabularx",
       width="\\linewidth",
#        sanitize.text.function = function(x) {x},
#        sanitize.colnames.function =  bold.colHeaders,
       sanitize.rownames.function = addSpace
      )

secondTable <- xtable(wideQW[,c(1,10:ncol(wideQW))],
       label="tab:QW2"
       )
align(secondTable) <- "lXXXXXXX"
print(secondTable,
       caption.placement="top",
       size = "\\footnotesize",
       latex.environment=NULL,
       tabular.environment="tabularx",
       width="\\linewidth",
#        sanitize.text.function = function(x) {x},
#        sanitize.colnames.function =  bold.colHeaders,
       sanitize.rownames.function = addSpace
      )


@


\clearpage

%------------------------------------------------------------
\subsection{\Sexpr{sites[1]} \Sexpr{siteTable[siteTable$site_no == sites[1],"station_nm"]} Lake-Depth Profiles}
%------------------------------------------------------------ 

<<site1Profiles, echo=FALSE, eval=TRUE>>=
  
i <- sites[1]
subData <- subData[subData$USGSPCode %in% c("00010","00300"),]
numGraphs <- length(unique(subData$ActivityStartDate))

if(numGraphs > 10) {
  numRows <- ceiling(numGraphs/5)
  numCol <- 5
} else if (numGraphs <= 5) {
  numRows <- 1
  numCol <- numGraphs
} else if (numGraphs > 5 & numGraphs <= 10){
  numRows <- 2
  numCol <- ceiling(numGraphs/2)
}
yLabIndex <- seq(1,by = numCol, length.out = numRows)

baseName <- paste0(i,"_LAKE_DEPTH_PROFILES")
setSweave(file.path("figure",baseName),10,5)
layoutResponse <- setLayout(num.rows=numRows,num.cols = numCol, 
                            num.graphs = numGraphs)
for(dateIndex in 1:numGraphs){
  date <- unique(subData$ActivityStartDate)[dateIndex]
  subDataDate <- subset(subData, ActivityStartDate==date)
  wTemp <- which(subDataDate$USGSPCode %in% "00010")
  doInext <- which(subDataDate$USGSPCode %in% "00300")
  graph1 <- setGraph(dateIndex, layoutResponse)
  graph1 <- setTopMargin(graph1)
  yLabel <- ifelse(dateIndex %in% yLabIndex,"DEPTH, IN METERS","")
  
  plotReturn <- xyPlot(subDataDate$ResultMeasureValue[wTemp], 
                         subDataDate$ActivityDepthHeightMeasure.MeasureValue[wTemp], 
                         Plot=list(name="Water Temperature (C)", 
                                   what="line",type="dashed"),
                         xtitle="",
                         ytitle=yLabel,
                         xaxis.range=c(0,30),margin=graph1)
    
  plotReturn <- addXY(subDataDate$ResultMeasureValue[doInext], 
          subDataDate$ActivityDepthHeightMeasure.MeasureValue[doInext],
          Plot=list(name="Dissolved Oxygen"),
          new.axis="top",new.title=date, current=plotReturn)
  if(dateIndex == 1){
#     addTitle(Main = paste0("Lake-Depth Profiles, ", 
#                   paste(range(unique(subData$ActivityStartDate)),collapse=" to ")))
          addExplanation(plotReturn, where="ul")
  }
  
}
graphics.off()

Main = paste0("Lake-Depth Profiles, ", 
                  paste(range(unique(subData$ActivityStartDate)),collapse=" to "))

@

\begin{figure}[h]
\includegraphics{figure/\Sexpr{baseName}.pdf}
\caption{\Sexpr{Main}}
\end{figure}

\end{landscape}

%------------------------------------------------------------
\section{Header 2}
%------------------------------------------------------------ 
Blah blah


<<workflowFlowHistory, echo=TRUE,eval=FALSE, message=FALSE>>=


# Some R code

@



%------------------------------------------------------------ 
\section{Header 3}
\label{sec:dataframes}
%------------------------------------------------------------ 
Text blah blah. Here's a table with xtable. Also, has a bit of formatting (in the ft$^3$/s).

<<tableParameterCodes, echo=FALSE,results='asis'>>=
pCode <- c('00060', '00065', '00010','00045','00400')
shortName <- c("Discharge [ft$^3$/s]","Gage height [ft]","Temperature [C]", "Precipitation [in]", "pH")

data.df <- data.frame(pCode, shortName, stringsAsFactors=FALSE)

print(xtable(data.df,
       label="tab:params",
       caption="Common USGS Parameter Codes"),
       caption.placement="top",
       size = "\\footnotesize",
       latex.environment=NULL,
       sanitize.text.function = function(x) {x},
       sanitize.colnames.function =  bold.colHeaders,
       sanitize.rownames.function = addSpace
      )

@


%------------------------------------------------------------ 
\subsection{Subsection 1}
\label{sec:dataframesDaily}
%------------------------------------------------------------ 
Here's a table without using xtable, table \ref{table:Daily1}).

\begin{table}[!ht]
{\footnotesize
\caption{Daily dataframe} 
\label{table:Daily1}
\begin{tabular}{llll}
  \hline
\multicolumn{1}{c}{\textbf{\textsf{ColumnName}}} &
\multicolumn{1}{c}{\textbf{\textsf{Type}}} &
\multicolumn{1}{c}{\textbf{\textsf{Description}}} &
\multicolumn{1}{c}{\textbf{\textsf{Units}}} \\ 
  \hline
  Date & Date & Date & date \\ 
  [5pt]Q & number & Discharge in m\textsuperscript{3}/s & m\textsuperscript{3}/s \\ 
  [5pt]Qualifier & string & Qualifing code & character \\ 
  [5pt]Q7 & number & 7 day running average of Q & m\textsuperscript{3}/s \\ 
  [5pt]Q30 & number & 30 running average of Q & m\textsuperscript{3}/s \\ 
   \hline
\end{tabular}
}
\end{table}

\FloatBarrier

There's also a table with a footnote.

\begin{table}
{\footnotesize
  \begin{threeparttable}[b]
  \caption{Sample dataframe}
  \label{tab:SampleDataframe}
  \begin{tabular}{llll}
  \hline
\multicolumn{1}{c}{\textbf{\textsf{ColumnName}}} & 
\multicolumn{1}{c}{\textbf{\textsf{Type}}} & 
\multicolumn{1}{c}{\textbf{\textsf{Description}}} & 
\multicolumn{1}{c}{\textbf{\textsf{Units}}} \\ 
  \hline
  Date & Date & Date & date \\ 
  [5pt]CosDY & number & Cosine of DecYear & numeric \\ 
  [5pt]Q \tnote{1} & number & Discharge & m\textsuperscript{3}/s \\ 
  [5pt]LogQ \tnote{1} & number & Natural logarithm of discharge & numeric \\ 
   \hline
\end{tabular}

  \begin{tablenotes}
    \item[1] Discharge columns are populated from data in the Daily dataframe after calling the \texttt{mergeReport} function.
  \end{tablenotes}
 \end{threeparttable}
}
\end{table}

\FloatBarrier

%------------------------------------------------------------ 
\subsection{Subsection 2}
\label{sec:dataframesSample}
%------------------------------------------------------------ 

\FloatBarrier


%------------------------------------------------------------ 
\section{Next Section}
\label{sec:flowHistory}
%------------------------------------------------------------ 


We will walk through an example from Columbia River at The Dalles, OR.

<<flowHistory,echo=TRUE,eval=TRUE,message=FALSE>>=
#Some R stuff
x <- 1
@


\FloatBarrier

%------------------------------------------------------------ 
\subsection{Plotting Options}
\label{sec:plotOptions}
%------------------------------------------------------------ 



<<plotSingleandSD, echo=TRUE, fig.cap="Plots of discharge statistics",fig.subcap=c("plot(1:10)","plot(rnorm(10))"),out.width='.5\\linewidth',out.height='.5\\linewidth',fig.show='hold',fig.pos="h">>=
plot(1:10)
plot(rnorm(10))
@

\clearpage



%------------------------------------------------------------ 
\subsection{Plotting Options}
\label{sec:plotOptionsWQ}
%------------------------------------------------------------ 

More text

<<plotBoxes, echo=TRUE, fig.cap="Concentration box plots",out.width='.5\\linewidth',out.height='.5\\linewidth',fig.show='hold',fig.pos="h">>=
plot(rnorm(10))
@

\clearpage



\end{document}
